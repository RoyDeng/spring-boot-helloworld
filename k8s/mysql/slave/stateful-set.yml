apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: helloworld-cluster
  labels:
    app: mysql-slave
  name: mysql-slave
  annotations:
    kubesphere.io/alias-name: mysql slave
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-slave
  template:
    metadata:
      labels:
        app: mysql-slave
    spec:
      containers:
        - name: slave-container
         # type: worker
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: '2'
              memory: 8Gi
            limits:
              cpu: '4'
              memory: 16Gi
          image: nexus.cmss.com:8086/cnp/mysql:8.0.18
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
          command:
            - bash
            - "-c"
            - |
              set -e
              until MYSQL_PWD=${MASTER_MYSQL_ROOT_PASSWORD} mysql -u root -h mysql-master ; do
                >&2 echo "MySQL master is unavailable - sleeping"
                sleep 3
              done
              mysql_net=$(ip route | awk '$1=="default" {print $3}' | sed "s/\.[0-9]\+$/.%/g")
              MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -u root \
              -e "CREATE USER '${MYSQL_REPLICATION_USER}'@'${mysql_net}' IDENTIFIED BY '${MYSQL_REPLICATION_PASSWORD}'; \
              GRANT REPLICATION SLAVE ON *.* TO '${MYSQL_REPLICATION_USER}'@'${mysql_net}';"
              master_status_info=$(MYSQL_PWD=${MASTER_MYSQL_ROOT_PASSWORD} mysql -u root -h mysql-master -e "show master status\G")
              LOG_FILE=$(echo "${master_status_info}" | awk 'NR!=1 && $1=="File:" {print $2}')
              LOG_POS=$(echo "${master_status_info}" | awk 'NR!=1 && $1=="Position:" {print $2}')
              MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -u root \
              -e "CHANGE MASTER TO MASTER_HOST='mysql-master', \
              MASTER_USER='${MYSQL_REPLICATION_USER}', \
              MASTER_PASSWORD='${MYSQL_REPLICATION_PASSWORD}', \
              MASTER_LOG_FILE='${LOG_FILE}', \
              MASTER_LOG_POS=${LOG_POS};"
              MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -u root -e "START SLAVE;show slave status\G"
          volumeMounts:
            - name: slave-cnf-volume
              readOnly: false
              mountPath: /etc/mysql
            - name: slave-data-volume
              readOnly: false
              mountPath: /var/lib/mysql-files
      serviceAccount: default
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: mysql-slave
                topologyKey: kubernetes.io/hostname
      volumes:
        - name: slave-cnf-volume
          configMap:
            name: mysql-slave-cnf
            items:
              - key: my.cnf
                path: my.cnf
        - name: slave-data-volume
          persistentVolumeClaim:
            claimName: mysql-pvc-slave
  serviceName: mysql-slave